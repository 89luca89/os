#!/bin/busybox sh
set -e
set -x

/bin/mount -t proc proc -o nodev,nosuid,hidepid=2 /proc
/bin/mount -t devtmpfs -o nosuid,noexec devtmpfs /dev
/bin/mount -t sysfs sys -o nodev,nosuid,noexec /sys
/bin/mount -t tmpfs -o nodev,nosuid,noexec tmpfs /tmp

# Setup tty/pty
/bin/mkdir /dev/pts
/bin/mount -t devpts devpts -o noexec,nosuid,newinstance,ptmxmode=0666,mode=0620,gid=tty /dev/pts/
/bin/mount --bind /dev/pts/ptmx /dev/ptmx

# ldconfig is run to prime ld.so.cache for glibc packages which require it.
if [ -x /sbin/ldconfig ]; then
	/sbin/ldconfig /lib /usr/lib /usr/lib64 || :
fi

# Fetch settings from cmdline
DNS="$(tr ' ' '\n' < /proc/cmdline | /bin/grep "dns=" | /usr/bin/cut -d'=' -f2-)"
HOSTNAME="$(tr ' ' '\n' < /proc/cmdline | /bin/grep "hostname=" | /usr/bin/cut -d'=' -f2-)"
SSHKEY="$(tr ' ' '\n' < /proc/cmdline | /bin/grep "sshkey=" | /usr/bin/cut -d'=' -f2- | /bin/base64 -d)"

if [ -z "${SSHKEY}" ]; then
	/bin/echo "Missing default mount for ssh keys"
	exit 1
fi

# We can ignore this fail, if we use a kernel with kvm_guest.config, we won't need this
# and network will work anyway
# If this fails and we won't have network, the ifconfig command will fail anyway.
# Also we load cpu accelleration drivers in case those are needed.
/usr/sbin/depmod -a || :
/usr/bin/sort -u \
	/sys/devices/system/cpu/modalias  \
	/sys/devices/pci*/*/virtio*/modalias | /usr/bin/xargs -n1 /usr/sbin/modprobe 2>/dev/null || :
# modprobe 9p if absent
/bin/grep -q 9p /proc/filesystems || /usr/sbin/modprobe 9p

# Setup default mountpoint for 9p shared dir
/bin/mount -t 9p -o trans=virtio defaultshare /mnt/ -oversion=9p2000.L

# If we have an external disk, we want to perform builds in that
if [ -e /dev/vda ]; then
	/usr/sbin/modprobe ext4
	/sbin/mkfs.ext4 -O ^has_journal -E lazy_itable_init=0,lazy_journal_init=0 /dev/vda
	/bin/mkdir -p /mount
	/bin/mount -o nobarrier,noatime,nodiratime,nobh -t ext4 /dev/vda /home/build
fi

# Fix home permissions from cpio command
/bin/chown -R build:build /home/build

# Setup default network
/bin/ifconfig lo up
/bin/ifconfig eth0 10.0.2.15 netmask 255.255.255.0
/bin/route add default gw 10.0.2.2 eth0

/bin/hostname "${HOSTNAME:-"wolfi-vm"}"
echo "127.0.0.1 ${HOSTNAME:-"wolfi-vm"}" >> /etc/hosts
/bin/echo "nameserver ${DNS:-"1.1.1.1"}" > /etc/resolv.conf

##############
# Entrypoint #
##############
# Setup SSH keys for external access
/bin/mkdir -p -m 0700 /root/.ssh/ /home/build/.ssh/
/bin/echo "${SSHKEY}" > /root/.ssh/authorized_keys
/bin/echo "${SSHKEY}" > /home/build/.ssh/authorized_keys
/bin/chmod 0400 /root/.ssh/authorized_keys /home/build/.ssh/authorized_keys
/bin/chown -R build:build /home/build/.ssh/
# Setting up AcceptEnv
/bin/echo "AcceptEnv *" >> /etc/ssh/sshd_config
/usr/bin/ssh-keygen -A
exec /usr/sbin/sshd -D
