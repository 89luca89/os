package:
  name: serve
  version: "14.2.4"
  epoch: 0
  description: "Static file serving and directory listing"
  copyright:
    - license: MIT
  dependencies:
    runtime:
      - nodejs
      - posix-libc-utils

environment:
  contents:
    packages:
      - build-base
      - nodejs
      - npm
      - wolfi-base

pipeline:
  - uses: npm/install
    with:
      package: serve
      prefix: ${{targets.contextdir}}/usr
      version: ${{package.version}}

  - if: ${{build.arch}} == 'aarch64'
    runs: |
      # Remove x86_64 clipboard binaries (xsel/xclip) from clipboardy package that cause
      # "so:ld-linux-x86-64.so.2" dependency errors on aarch64.Removing them prevents "so:ld-linux-x86-64.so.2" dependency errors.
      find ${{targets.contextdir}}/usr/lib/node_modules/serve/node_modules -name "xsel" -delete || true
      find ${{targets.contextdir}}/usr/lib/node_modules/serve/node_modules -name "xclip" -delete || true

  - uses: strip

update:
  enabled: true
  github:
    identifier: vercel/serve
    use-tag: true

test:
  environment:
    contents:
      packages:
        - curl
        - wait-for-it
        - jq
  pipeline:
    - name: Check serve version and help
      runs: |
        serve --version | grep ${{package.version}}
        serve --help | grep "serve - Static file serving and directory listing"
    - name: Test serve with static content
      runs: |
        mkdir -p /tmp/test-serve/build
        echo '<!DOCTYPE html><html><head><title>Test</title></head><body><h1>Serve Test Page</h1></body></html>' > /tmp/test-serve/build/index.html
        echo '{"name": "test-app"}' > /tmp/test-serve/build/manifest.json

        cd /tmp/test-serve
        serve -s build -p 3001 > /dev/null 2>&1 &

        wait-for-it 127.0.0.1:3001 -t 30

        curl -fsSL http://localhost:3001/ | grep "Serve Test Page"
        curl -fsSL http://localhost:3001/manifest.json | jq -e '.name == "test-app"'

        # Test SPA fallback (non-existent route should return index.html)
        curl -fsSL http://localhost:3001/nonexistent-route | grep "Serve Test Page"
    - name: Test serve without SPA mode
      runs: |
        set -euo pipefail

        mkdir -p /tmp/test-basic
        echo '<h1>Basic Test</h1>' > /tmp/test-basic/test.html

        cd /tmp/test-basic
        serve -p 3002 > /dev/null 2>&1 &

        wait-for-it 127.0.0.1:3002 -t 30

        curl -fsSL http://localhost:3002/test.html | grep "Basic Test"
