package:
  name: juicefs-1.3
  version: "1.3.0"
  epoch: 0
  description: JuiceFS is a distributed POSIX file system built on top of Redis and S3.
  copyright:
    - license: Apache-2.0
  dependencies:
    provides:
      - juicefs=${{package.full-version}}

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/juicedata/juicefs
      tag: v${{package.version}}
      expected-commit: 30190ca1094d26e85f19a979ca51b0ea19af1eaa

  - uses: go/bump
    with:
      deps: |-
        golang.org/x/net@v0.38.0
        github.com/coredns/coredns@v1.12.2
        github.com/go-jose/go-jose/v4@v4.0.5
        github.com/golang-jwt/jwt/v4@v4.5.2
      replaces: |-
        google.golang.org/grpc/stats/opentelemetry=google.golang.org/grpc/stats/opentelemetry@v0.0.0-20240907200651-3ffb98b2c93a
        google.golang.org/grpc=google.golang.org/grpc@v1.72.2
        github.com/golang-jwt/jwt=github.com/golang-jwt/jwt/v4@v4.5.2
        github.com/golang-jwt/jwt/v4=github.com/golang-jwt/jwt/v4@v4.5.2
      tidy: false # Will perform in the next step

  - runs: |
      # Exclude conflicting standalone module for grpc/stats/opentelemetry
      go mod edit -exclude=google.golang.org/grpc/stats/opentelemetry@v0.0.0-20240907200651-3ffb98b2c93a
      go mod edit -exclude=github.com/golang-jwt/jwt@v3.2.2+incompatible
      go mod edit -exclude=github.com/golang-jwt/jwt@v3.2.1+incompatible
      # Clean up module graph
      go mod tidy

  - uses: go/build
    with:
      packages: .
      output: juicefs
      ldflags: |
        -X github.com/juicedata/juicefs/pkg/version.version=${{package.version}}
        -X github.com/juicedata/juicefs/pkg/version.revision=$(git rev-parse HEAD)
        -X github.com/juicedata/juicefs/pkg/version.revisionDate=$(date -u -d "@$SOURCE_DATE_EPOCH" +"%Y-%m-%dT%H:%M:%SZ")

subpackages:
  - name: ${{package.name}}-compat
    description: Compat package for ${{package.name}}
    dependencies:
      runtime:
        - fuse3
        - lsof
        - procps
        - strace
        - iproute2
        - net-tools
      provides:
        - juicefs-compat=${{package.full-version}}
    pipeline:
      - runs: |
          mkdir -p "${{targets.contextdir}}"/usr/local/bin
          mkdir -p "${{targets.contextdir}}"/bin
          ln -sf /usr/bin/juicefs "${{targets.contextdir}}"/usr/local/bin/juicefs
          ln -sf /usr/bin/juicefs "${{targets.contextdir}}"/bin/mount.juicefs
    test:
      pipeline:
        - runs: |
            test "$(readlink /usr/local/bin/juicefs)" = "/usr/bin/juicefs"
            test "$(readlink /bin/mount.juicefs)" = "/usr/bin/juicefs"

update:
  enabled: true
  ignore-regex-patterns:
    - '-rc'
    - '-beta'
  github:
    identifier: juicedata/juicefs
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - redis
        - minio
        - mc
        - wait-for-it
  pipeline:
    - name: "Version test"
      runs: |
        juicefs --version 2>&1 | grep ${{package.version}}
    - name: "Start redis for metadata"
      runs: |
        redis-server --daemonize yes
        sleep 2
    - name: "Start MinIO"
      runs: |
        export MINIO_ACCESS_KEY=minioadmin
        export MINIO_SECRET_KEY=minioadmin
        mkdir -p /data/minio
        minio server /data/minio --address :9000 --console-address :9001 > /tmp/minio.log 2>&1 &
        wait-for-it localhost:9000 -t 30
    - name: "Create test bucket using mc"
      runs: |
        export MINIO_ACCESS_KEY=minioadmin
        export MINIO_SECRET_KEY=minioadmin
        mc alias set local http://localhost:9000 minioadmin minioadmin > /tmp/mc.log 2>&1
        mc mb local/juicefs-bucket
    - name: "Format juicefs volume"
      runs: |
        export ACCESS_KEY=minioadmin
        export SECRET_KEY=minioadmin
        juicefs format --bucket http://localhost:9000/juicefs-bucket --access-key $ACCESS_KEY --secret-key $SECRET_KEY redis://localhost testvolume
    - name: "Mount volume and run file tests"
      runs: |
        mkdir -p /mnt/jfs
        juicefs mount -d redis://localhost /mnt/jfs &
        sleep 3
        touch /mnt/jfs/test.txt
        echo "hello juicefs" > /mnt/jfs/test.txt
        grep -q "hello" /mnt/jfs/test.txt
